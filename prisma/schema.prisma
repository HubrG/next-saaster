// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

// SECTION: Next AUTH

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum UserRole {
  USER
  ADMIN
  EDITOR
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  date           DateTime? @default(now())
  role           UserRole  @default(USER)
  accounts       Account[]
  sessions       Session[]
}

// SECTION -> Reste du schema

model appSettings {
  id                String    @id @default(cuid())
  name              String?   @default("NextSaaster")
  baseline          String?   @default("Begin a SaaS project with Next.js, Prisma, and Stripe")
  description       String?   @default("Begin a SaaS project with Next.js, Prisma, and Stripe")
  theme             String?   @default("nanny")
  roundedCorner     Float?    @default(5)
  defaultDarkMode   Boolean?  @default(true)
  activeTopLoader   Boolean?  @default(true)
  activeDarkMode    Boolean?  @default(true)
  activeCtaOnNavbar Boolean?  @default(true)
  createdAt         DateTime? @default(now())
  updatedAt         DateTime? @updatedAt
}

model Pricing {
  id               String             @id @default(cuid())
  name             String
  description      String?
  isCustom         Boolean?           @default(false)
  isPopular        Boolean?           @default(false)
  isRecommended    Boolean?           @default(false)
  isFree           Boolean?           @default(false)
  isTrial          Boolean?           @default(false)
  trialDays        Int?               @default(0)
  monthlyPrice     Int?               @default(0)
  yearlyPrice      Int?               @default(0)
  monthlyTax       Int?               @default(0)
  yearlyTax        Int?               @default(0)
  monthlyPromotion Int?               @default(0)
  yearlyPromotion  Int?               @default(0)
  currency         String?            @default("usd")
  active           Boolean?           @default(false)
  features         PricingToFeature[]
  createdAt        DateTime?          @default(now())
  updatedAt        DateTime?          @updatedAt
}

model PricingToFeature {
  id        String         @id @default(cuid())
  pricingId String
  featureId String
  pricing   Pricing        @relation(fields: [pricingId], references: [id])
  feature   PricingFeature @relation(fields: [featureId], references: [id])

  @@unique([pricingId, featureId])
}

model PricingFeature {
  id          String                  @id @default(cuid())
  name        String?
  description String?
  categoryId  String?
  pricings    PricingToFeature[]
  category    PricingFeatureCategory? @relation(fields: [categoryId], references: [id])
  createdAt   DateTime?               @default(now())
  updatedAt   DateTime?               @updatedAt
}

model PricingFeatureCategory {
  id          String           @id @default(cuid())
  name        String?
  description String?
  features    PricingFeature[]
  createdAt   DateTime?        @default(now())
  updatedAt   DateTime?        @updatedAt
}
