// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

// SECTION: Next AUTH

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum UserRole {
  USER
  ADMIN
  EDITOR
}

model User {
  id                       String                     @id @default(cuid())
  name                     String?
  email                    String?                    @unique
  emailVerified            DateTime?
  image                    String?
  hashedPassword           String?
  date                     DateTime?                  @default(now())
  role                     UserRole                   @default(USER)
  accounts                 Account[]
  sessions                 Session[]
  UserFeatureCreditBalance UserFeatureCreditBalance[]
  createdAt                DateTime?                  @default(now())
  updatedAt                DateTime?                  @updatedAt
  transactions             Transaction[]
  subscriptions            Subscription[]
}

// SECTION -> Reste du schema

model appSettings {
  id                String    @id @default(cuid())
  name              String?   @default("NextSaaster")
  baseline          String?   @default("Begin a SaaS project with Next.js, Prisma, and Stripe")
  description       String?   @default("Begin a SaaS project with Next.js, Prisma, and Stripe")
  theme             String?   @default("nanny")
  roundedCorner     Float?    @default(5)
  defaultDarkMode   Boolean?  @default(true)
  activeTopLoader   Boolean?  @default(true)
  activeDarkMode    Boolean?  @default(true)
  activeCtaOnNavbar Boolean?  @default(true)
  uniqueCreditType  Boolean?  @default(true) // token ? or more features
  activeRefill      Boolean?  @default(true) // token ? or more features
  createdAt         DateTime? @default(now())
  updatedAt         DateTime? @updatedAt
}

// SECTION: Pricing

model Pricing {
  id                       String                     @id @default(cuid())
  name                     String
  description              String?
  isCustom                 Boolean?                   @default(false)
  isPopular                Boolean?                   @default(false)
  isRecommended            Boolean?                   @default(false)
  isFree                   Boolean?                   @default(false)
  isTrial                  Boolean?                   @default(false)
  trialDays                Int?                       @default(0)
  isMonthly                Boolean?                   @default(false)
  price                    Int?                       @default(0)
  isYearly                 Boolean?                   @default(false)
  tax                      Int?                       @default(0)
  monthlyPromotion         Int?                       @default(0)
  yearlyPromotion          Int?                       @default(0)
  currency                 String?                    @default("usd")
  active                   Boolean?                   @default(false)
  features                 PricingToFeature[]
  createdAt                DateTime?                  @default(now())
  updatedAt                DateTime?                  @updatedAt
  Subscriptions            Subscription[]
}

model PricingToFeature {
  id        String         @id @default(cuid())
  pricingId String
  featureId String
  pricing   Pricing        @relation(fields: [pricingId], references: [id])
  feature   PricingFeature @relation(fields: [featureId], references: [id])

  @@unique([pricingId, featureId])
}

model PricingFeature {
  id                       String                     @id @default(cuid())
  name                     String?
  description              String?
  categoryId               String?
  creditMonthly            Int?                       @default(0)
  creditYearly             Int?                       @default(0)
  yearly                   Boolean?                   @default(false)
  yearlyText               String?
  createdAt                DateTime?                  @default(now())
  updatedAt                DateTime?                  @updatedAt
  pricings                 PricingToFeature[]
  category                 PricingFeatureCategory?    @relation(fields: [categoryId], references: [id])
  UserFeatureCreditBalance UserFeatureCreditBalance[]
}

model PricingFeatureCategory {
  id          String           @id @default(cuid())
  name        String?
  description String?
  createdAt   DateTime?        @default(now())
  updatedAt   DateTime?        @updatedAt
  features    PricingFeature[]
}

model UserFeatureCreditBalance {
  id        String         @id @default(cuid())
  userId    String
  featureId String
  balance   Int?           @default(0)
  user      User           @relation(fields: [userId], references: [id])
  feature   PricingFeature @relation(fields: [featureId], references: [id])

  @@unique([userId, featureId])
}

model Transaction {
  id          String    @id @default(cuid())
  userId      String
  sessionId   String
  amount      Int?
  currency    String?
  invoice     String?
  description String?
  status      String?
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  user        User      @relation(fields: [userId], references: [id])
}

model Subscription {
  id          String    @id @default(cuid())
  userId      String
  sessionId   String
  amount      Int?
  pricingId   String?
  currency    String?   @default("usd")
  description String?
  status      String?
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  pricing     Pricing?  @relation(fields: [pricingId], references: [id])
}

// SECTION END: Pricing

model ApiKey {
  id        String    @id @default(cuid())
  name      String?
  key       String?   @unique
  secret    String?   @unique
  active    Boolean?  @default(false)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}